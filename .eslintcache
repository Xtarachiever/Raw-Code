[{"C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\React\\decagon_project\\src\\index.js":"1","C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\React\\decagon_project\\src\\App.js":"2","C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\React\\decagon_project\\src\\Home.js":"3","C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\React\\decagon_project\\src\\Details.js":"4","C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\React\\decagon_project\\src\\Pagination.js":"5","C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\React\\decagon_project\\src\\User.js":"6","C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\React\\decagon_project\\src\\Each.js":"7","C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\React\\decagon_project\\src\\eachInfo.js":"8","C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\React\\decagon_project\\src\\EachDetails.js":"9","C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\React\\decagon_project\\src\\EachInfo.js":"10","C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\React\\decagon_project\\src\\HomeTwo.js":"11","C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\React\\decagon_project\\src\\downloader.js":"12"},{"size":451,"mtime":1610444458670,"results":"13","hashOfConfig":"14"},{"size":636,"mtime":1610657726491,"results":"15","hashOfConfig":"14"},{"size":8203,"mtime":1610667266710,"results":"16","hashOfConfig":"14"},{"size":661,"mtime":1610538034145,"results":"17","hashOfConfig":"14"},{"size":665,"mtime":1610537625798,"results":"18","hashOfConfig":"14"},{"size":915,"mtime":1610534182025,"results":"19","hashOfConfig":"14"},{"size":459,"mtime":1610473376741,"results":"20","hashOfConfig":"14"},{"size":454,"mtime":1610485804322,"results":"21","hashOfConfig":"14"},{"size":4997,"mtime":1610543073819,"results":"22","hashOfConfig":"14"},{"size":840,"mtime":1610559642726,"results":"23","hashOfConfig":"14"},{"size":2512,"mtime":1610667224833,"results":"24","hashOfConfig":"14"},{"size":4530,"mtime":1610667189748,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"9zuh9d",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\React\\decagon_project\\src\\index.js",[],["56","57"],"C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\React\\decagon_project\\src\\App.js",["58"],"C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\React\\decagon_project\\src\\Home.js",["59"],"import React,{useEffect,useState} from 'react';\r\nimport './App.css';\r\nimport Details from './Details';\r\nimport Pagination from './Pagination';\r\nimport {Link} from 'react-router-dom';\r\nimport User from './User';\r\n\r\nconst Home=()=>{\r\n    const [states,setState]=useState([]);\r\n    const [search,setSearch]=useState(\"\");\r\n    const [country,setCountry]=useState([]);\r\n    const [pick,setPicker]=useState([]);\r\n    const [status,setStatus]=useState('Country');\r\n    const [gender,setGender]=useState('All');\r\n    const [currentPage,setCurrentPage]=useState(1);\r\n    const [postsPerPage]=useState(3);\r\n    \r\n    useEffect(()=>{\r\n        fetchDatas();\r\n        getCountries();\r\n        picker();\r\n      },[status,gender]);\r\n\r\n    \r\n    // const anotherOne=useMemo(()=>(\r\n    //     pick.slice(indexOfFirstPage,indexOfLastPage)\r\n    //     ),[pick])\r\n    const fetchDatas=async ()=>{\r\n        try{\r\n          const response=await fetch('https://randomuser.me/api/?results=20');\r\n          const data=await response.json();\r\n          const datas=data.results;\r\n          setState(datas);\r\n        //   console.log(datas);\r\n        }\r\n        catch{\r\n          alert('Error occured');\r\n        }\r\n    }\r\n    const indexOfLastPage=currentPage*postsPerPage;\r\n    const indexOfFirstPage=indexOfLastPage-postsPerPage;\r\n    const currentPosts=country.slice(indexOfFirstPage,indexOfLastPage);\r\n    const currentPick=pick.slice(indexOfFirstPage,indexOfLastPage);\r\n    const filterSearch=states.filter((state)=>((state.name.first.toLowerCase()).includes(search.toLowerCase())||(state.gender.toLowerCase().includes(search.toLowerCase()))))\r\n\r\n    //setSearch values\r\n    const getSearch=(e)=>{\r\n        setSearch(e.target.value);\r\n        setCountry(filterSearch);\r\n    }\r\n    const getStatus=(e)=>{\r\n        setStatus(e.target.value);\r\n    }\r\n    const getGender=(e)=>{\r\n        setGender(e.target.value);\r\n        setCountry(currentPick);\r\n    }\r\n\r\n    //get the countries available\r\n    const countries=states.map(location=>location.location.country)\r\n    const uniqueCountries=Array.from(new Set(countries)).sort();\r\n    const getCountries=()=>{\r\n        setSearch(\"\");\r\n        setPicker(\"\");\r\n        switch(status){\r\n            case 'Australia':\r\n                setCountry(states.filter(state=>state.location.country==='Australia'));\r\n                break;\r\n            case 'Ireland':\r\n                setCountry(states.filter(state=>state.location.country==='Ireland'));\r\n                break;\r\n            case 'Brazil':\r\n                setCountry(states.filter(state=>state.location.country==='Brazil'));\r\n                break;\r\n            case 'Canada':\r\n                setCountry(states.filter(state=>state.location.country==='Canada'));\r\n                break;\r\n            case 'Finland':\r\n                setCountry(states.filter(state=>state.location.country==='Finland'));\r\n                break;\r\n            case 'France':\r\n                setCountry(states.filter(state=>state.location.country==='France'));\r\n                break;\r\n            case 'Germany':\r\n                setCountry(states.filter(state=>state.location.country==='Germany'));\r\n                break;\r\n            case 'Denmark':\r\n                setCountry(states.filter(state=>state.location.country==='Denmark'));\r\n                break;\r\n            case 'Spain':\r\n                setCountry(states.filter(state=>state.location.country==='Spain'));\r\n                break;\r\n            case 'United Kingdom':\r\n                setCountry(states.filter(state=>state.location.country==='United Kingdom'));\r\n                break;\r\n            case 'Iran':\r\n                setCountry(states.filter(state=>state.location.country==='Iran'));\r\n                break;\r\n            case 'Norway':\r\n                setCountry(states.filter(state=>state.location.country==='Norway'));\r\n                break;\r\n            case 'Netherlands':\r\n                setCountry(states.filter(state=>state.location.country==='Netherlands'));\r\n                break;\r\n            case 'New Zealand':\r\n                setCountry(states.filter(state=>state.location.country==='New Zealand'));\r\n                break;\r\n            case 'Turkey':\r\n                setCountry(states.filter(state=>state.location.country==='Turkey'));\r\n                break;\r\n            case 'United States':\r\n                setCountry(states.filter(state=>state.location.country==='United States'));\r\n                break;\r\n            default:\r\n                setCountry(states);\r\n                break;\r\n        }\r\n    }\r\n    //Change pageNumbers\r\n    const paginate=(pageNumber)=>setCurrentPage(pageNumber);\r\n\r\n\r\n    //Change Picker\r\n    const picker=()=>{\r\n        switch(gender){\r\n            case 'female':\r\n                setPicker(states.filter(state=>state.gender==='female'));\r\n                break;\r\n            case 'male':\r\n                setPicker(states.filter(state=>state.gender==='male'));\r\n                break;\r\n            default:\r\n                setPicker(states);\r\n                break;\r\n        }\r\n    }\r\n    // const isCountryPicker=isCountry;\r\n    // let isPicker;\r\n    // if(isCountryPicker){\r\n    //     isPicker=currentPosts;\r\n    // }\r\n    // else{\r\n    //     isPicker=currentPick;\r\n    // }\r\n    return(\r\n        <div className=\"contents\" data-testid=\"home\">\r\n            <div className=\"contents-one\">\r\n                <p className=\"header\">Hello,<span> Emerald</span></p> \r\n                <p>Welcome to your dashboard, kindly sort through the user base</p>\r\n                <div className=\"search\">\r\n                    <i className=\"fa fa-search\"></i>\r\n                    <input type=\"text\" placeholder=\"Find a user\" value={search} onChange={getSearch}/>\r\n                </div>\r\n                <p className=\"user-header\">Show Users</p>\r\n                <div className=\"user-gender\">\r\n                    <User states={states} getGender={getGender}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"content-two\">\r\n                <p className=\"filter\">Filter By</p>\r\n                <div className=\"heading\">\r\n                    <div className=\"search\">\r\n                        <i className=\"fa fa-search\"></i>\r\n                        <input type=\"text\" value={search} onChange={getSearch} placeholder=\"Find a user\"/>\r\n                    </div>\r\n                    <div className=\"select\">\r\n                        <select onChange={getStatus}>\r\n                            <option value=\"Country\">Country</option>\r\n                            {\r\n                                uniqueCountries.map(unique=>{\r\n                                    if(unique===\"\"){\r\n                                        return(<option value=\"Not Set\" key=\"Not Set\">Not Set</option>)\r\n                                    }\r\n                                    else{\r\n                                        return(<option value={unique} key={unique}>{unique}</option>)\r\n                                    }\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"info\">\r\n                        {currentPosts.map(state=>(\r\n                            <Link to={`/${state.name.first}`} style={{textDecoration:'none'}} className=\"linked\">\r\n                            <Details name={state.name.first} key={state.email} picture={state.picture.medium}\r\n                            street={state.location.street.number} city={state.location.street.name}\r\n                            country={state.location.country} email={state.email} phone={state.cell}/>\r\n                            </Link>\r\n                        ))}\r\n                </div>\r\n                <div className=\"next\">\r\n                    <Link to='/:name/downloader'>\r\n                        <button><i className=\"fa fa-cloud-download\"></i>Download Results</button>\r\n                    </Link>\r\n                    <Pagination totalPosts={states.length} postsPerPage={postsPerPage} paginate={paginate}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default Home;","C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\React\\decagon_project\\src\\Details.js",["60"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nfunction Details(props){\r\n    return(\r\n        <div className=\"details\">\r\n            <img src={props.picture} alt={props.picture}/>\r\n            <div className=\"content\">\r\n                <p className=\"name\">{props.name}</p>\r\n                <p>{props.street},{props.city},{props.country}</p>\r\n                <div className=\"contact\">\r\n                    <p className=\"email\">{props.email}</p>\r\n                    <p>{props.phone}</p>\r\n                    <i className=\"fa fa-arrow-right\"></i>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default Details;","C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\React\\decagon_project\\src\\Pagination.js",["61"],"import React from 'react';\r\n\r\nfunction Pagination({totalPosts,postsPerPage,paginate}){\r\n    const pageNumbers=[];\r\n    for(let i=1;i<=Math.ceil(totalPosts/postsPerPage);i++){\r\n        pageNumbers.push(i)\r\n    }\r\n    return(\r\n        <nav>\r\n            <ul className=\"pagination\">\r\n                {pageNumbers.map(number=>(\r\n                    <li key={number} className=\"page-item\">\r\n                        <a href=\"#\" onClick={()=>paginate(number)} className=\"page-link\">\r\n                            {number}\r\n                        </a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\nexport default Pagination;","C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\React\\decagon_project\\src\\User.js",[],"C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\React\\decagon_project\\src\\Each.js",["62","63","64"],"import React, { useState,useEffect } from 'react';\r\n\r\nfunction Each({genders,getGender,setGender}){\r\n    const [gender,setGenders]=useState(setGender);\r\n    const getGenders=(e)=>{\r\n        setGender(e.target.value)\r\n    }\r\n    return(\r\n        <nav className=\"change\">\r\n            <input type=\"checkbox\" id={genders} name={genders} value={genders} />\r\n            <label htmlFor={genders}>{getGenders}</label>\r\n        </nav>\r\n    )\r\n}\r\nexport default Each;","C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\React\\decagon_project\\src\\eachInfo.js",[],"C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\React\\decagon_project\\src\\EachDetails.js",["65","66","67","68","69","70","71"],"import React, { useEffect, useState } from 'react';\r\nimport EachInfo from './EachInfo';\r\nimport HomeTwo from './HomeTwo';\r\nimport Each from './Each';\r\nimport { Link } from 'react-router-dom';\r\nfunction EachDetails({match}){\r\n    const [info,setInfo]=useState([]);\r\n    const [states,setState]=useState([]);\r\n    const [search,setSearch]=useState(\"\");\r\n    const [country,setCountry]=useState([]);\r\n    const [pick,setPicker]=useState([]);\r\n    const [status,setStatus]=useState('Country');\r\n    const [gender,setGender]=useState('All');\r\n    const [didMount, setDidMount] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setDidMount(true);\r\n        return () => setDidMount(false);\r\n     }, [])\r\n\r\n    useEffect(()=>{\r\n        getEachDetails();\r\n        getCountries();\r\n        fetchDatas();\r\n    },[])\r\n\r\n    const getSearch=(e)=>{\r\n        setSearch(e.target.value);\r\n    }\r\n    const getStatus=(e)=>{\r\n        setStatus(e.target.value);\r\n    }\r\n\r\n        //get the countries available\r\n        const countries=states.map(location=>location.location.country)\r\n        const uniqueCountries=Array.from(new Set(countries)).sort();\r\n        const getCountries=()=>{\r\n            setSearch(\"\");\r\n            setPicker(\"\");\r\n            switch(status){\r\n                case 'Australia':\r\n                    setCountry(states.filter(state=>state.location.country==='Australia'));\r\n                    break;\r\n                case 'Ireland':\r\n                    setCountry(states.filter(state=>state.location.country==='Ireland'));\r\n                    break;\r\n                case 'Brazil':\r\n                    setCountry(states.filter(state=>state.location.country==='Brazil'));\r\n                    break;\r\n                case 'Canada':\r\n                    setCountry(states.filter(state=>state.location.country==='Canada'));\r\n                    break;\r\n                case 'Finland':\r\n                    setCountry(states.filter(state=>state.location.country==='Finland'));\r\n                    break;\r\n                default:\r\n                    setCountry(states);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        const fetchDatas=async ()=>{\r\n            try{\r\n              const response=await fetch('https://randomuser.me/api/?results=20');\r\n              const data=await response.json();\r\n              const datas=data.results;\r\n              setState(datas);\r\n            //   console.log(datas);\r\n            }\r\n            catch{\r\n              alert('Error occured');\r\n            }\r\n        }\r\n    const getEachDetails=async ()=>{\r\n        try{\r\n            const response=await fetch(`https://randomuser.me/api/?results=20/${match.params.name}`);\r\n            const datas=await response.json();\r\n            setInfo(datas.results);\r\n            console.log(datas.results)\r\n        }\r\n          catch{\r\n            alert('Sorry something went wrong')\r\n        }\r\n    };\r\n    return(\r\n        <div className=\"each-info\">\r\n            <HomeTwo/>\r\n            <div className=\"content-two detailed\">\r\n                <div className=\"filter\">\r\n                    <p className=\"filter\">Filter By</p>\r\n                </div>\r\n                <div className=\"heading\">\r\n                    <div className=\"search\">\r\n                        <i className=\"fa fa-search\"></i>\r\n                        <input type=\"text\" value={search} onChange={getSearch} placeholder=\"Find a user\"/>\r\n                    </div>\r\n                    <div className=\"select\">\r\n                        <select onChange={getStatus}>\r\n                            <option value=\"Country\">Country</option>\r\n                            {\r\n                                uniqueCountries.map(unique=>{\r\n                                    if(unique===\"\"){\r\n                                        return(<option value=\"Not Set\" key=\"Not Set\">Not Set</option>)\r\n                                    }\r\n                                    else{\r\n                                        return(<option value={unique} key={unique}>{unique}</option>)\r\n                                    }\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <Link to=\"/\" className=\"results\">\r\n                    <i className=\"fa fa-arrow-left\"></i>\r\n                    <p>Results</p>\r\n                </Link>\r\n                <div className=\"eached\">\r\n                {\r\n                    info.map(state=>(\r\n                        <EachInfo name={state.name.first} picture={state.picture.large} street={state.location.street.number} city={state.location.street.name}\r\n                        country={state.location.country} email={state.email} phone={state.cell} key={state.email}\r\n                        date={state.registered.date}/>\r\n                    ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default EachDetails;","C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\React\\decagon_project\\src\\EachInfo.js",[],"C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\React\\decagon_project\\src\\HomeTwo.js",["72","73"],"C:\\Users\\xtarachiever\\Documents\\ECX_WEB\\React\\decagon_project\\src\\downloader.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":5,"column":47,"nodeType":"80","messageId":"81","endLine":5,"endColumn":55},{"ruleId":"82","severity":1,"message":"83","line":22,"column":9,"nodeType":"84","endLine":22,"endColumn":24,"suggestions":"85"},{"ruleId":"78","severity":1,"message":"86","line":2,"column":9,"nodeType":"80","messageId":"81","endLine":2,"endColumn":13},{"ruleId":"87","severity":1,"message":"88","line":13,"column":25,"nodeType":"89","endLine":13,"endColumn":90},{"ruleId":"78","severity":1,"message":"90","line":1,"column":26,"nodeType":"80","messageId":"81","endLine":1,"endColumn":35},{"ruleId":"78","severity":1,"message":"91","line":4,"column":12,"nodeType":"80","messageId":"81","endLine":4,"endColumn":18},{"ruleId":"78","severity":1,"message":"92","line":4,"column":19,"nodeType":"80","messageId":"81","endLine":4,"endColumn":29},{"ruleId":"78","severity":1,"message":"93","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":12},{"ruleId":"78","severity":1,"message":"94","line":10,"column":12,"nodeType":"80","messageId":"81","endLine":10,"endColumn":19},{"ruleId":"78","severity":1,"message":"95","line":11,"column":12,"nodeType":"80","messageId":"81","endLine":11,"endColumn":16},{"ruleId":"78","severity":1,"message":"91","line":13,"column":12,"nodeType":"80","messageId":"81","endLine":13,"endColumn":18},{"ruleId":"78","severity":1,"message":"96","line":13,"column":19,"nodeType":"80","messageId":"81","endLine":13,"endColumn":28},{"ruleId":"78","severity":1,"message":"97","line":14,"column":12,"nodeType":"80","messageId":"81","endLine":14,"endColumn":20},{"ruleId":"82","severity":1,"message":"98","line":25,"column":7,"nodeType":"84","endLine":25,"endColumn":9,"suggestions":"99"},{"ruleId":"82","severity":1,"message":"100","line":17,"column":9,"nodeType":"84","endLine":17,"endColumn":11,"suggestions":"101"},{"ruleId":"82","severity":1,"message":"102","line":23,"column":9,"nodeType":"84","endLine":23,"endColumn":24,"suggestions":"103"},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getCountries' and 'picker'. Either include them or remove the dependency array.","ArrayExpression",["106"],"'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","'gender' is assigned a value but never used.","'setGenders' is assigned a value but never used.","'Each' is defined but never used.","'country' is assigned a value but never used.","'pick' is assigned a value but never used.","'setGender' is assigned a value but never used.","'didMount' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getCountries' and 'getEachDetails'. Either include them or remove the dependency array.",["107"],"React Hook useEffect has a missing dependency: 'setDidMount'. Either include it or remove the dependency array.",["108"],"React Hook useEffect has a missing dependency: 'picker'. Either include it or remove the dependency array.",["109"],"no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},"Update the dependencies array to be: [status, gender, getCountries, picker]",{"range":"118","text":"119"},"Update the dependencies array to be: [getCountries, getEachDetails]",{"range":"120","text":"121"},"Update the dependencies array to be: [setDidMount]",{"range":"122","text":"123"},"Update the dependencies array to be: [status, gender, picker]",{"range":"124","text":"125"},[699,714],"[status, gender, getCountries, picker]",[804,806],"[getCountries, getEachDetails]",[518,520],"[setDidMount]",[598,613],"[status, gender, picker]"]